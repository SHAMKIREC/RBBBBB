"use client"

import { useState } from 'react'
import { Button } from "@/components/ui/button"
import { Dialog, DialogContent } from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Checkbox } from "@/components/ui/checkbox"
import { ChevronDown } from "lucide-react"
import { motion, AnimatePresence } from "framer-motion"

const services: ServiceCategory[] = [
  {
    title: "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã",
    items: [
      "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º",
      "–ú–æ–Ω—Ç–∞–∂ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ—â–∏—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∫–∏",
      "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–ª–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
      "–ú–æ–Ω—Ç–∞–∂ —Å–∏—Å—Ç–µ–º –æ—Å–≤–µ—â–µ–Ω–∏—è",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ–∑–µ—Ç–æ–∫ –∏ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π",
      "–ó–∞–∑–µ–º–ª–µ–Ω–∏–µ –∏ –º–æ–ª–Ω–∏–µ–∑–∞—â–∏—Ç–∞",
      "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏"
    ]
  },
  {
    title: "–û—Ç–æ–ø–ª–µ–Ω–∏–µ –∏ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è",
    items: [
      "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –æ—Ç–æ–ø–ª–µ–Ω–∏—è",
      "–ú–æ–Ω—Ç–∞–∂ —Ä–∞–¥–∏–∞—Ç–æ—Ä–æ–≤ –æ—Ç–æ–ø–ª–µ–Ω–∏—è",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
      "–ú–æ–Ω—Ç–∞–∂ —Ç–µ–ø–ª—ã—Ö –ø–æ–ª–æ–≤",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏",
      "–ú–æ–Ω—Ç–∞–∂ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∫—É–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤",
      "–ü—É—Å–∫–æ–Ω–∞–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º"
    ]
  },
  {
    title: "–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ",
    items: [
      "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è",
      "–ú–æ–Ω—Ç–∞–∂ –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥–∞",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ—á–∏—Å—Ç–∫–∏",
      "–ú–æ–Ω—Ç–∞–∂ –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏",
      "–ú–æ–Ω—Ç–∞–∂ –Ω–∞—Å–æ—Å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
      "–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –ø–æ–º–µ—â–µ–Ω–∏–π",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ–¥–æ–Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª–µ–π"
    ]
  },
  {
    title: "–°–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    items: [
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è",
      "–ú–æ–Ω—Ç–∞–∂ –ø–æ–∂–∞—Ä–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞",
      "–ú–æ–Ω—Ç–∞–∂ –æ—Ö—Ä–∞–Ω–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–º–æ—Ñ–æ–Ω–æ–≤",
      "–°–∏—Å—Ç–µ–º—ã —É–º–Ω–æ–≥–æ –¥–æ–º–∞",
      "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
      "–î–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è"
    ]
  }
]

interface ServiceCategory {
  title: string
  items: string[]
}

const faqQuestions = [
  {
    question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –º–æ–Ω—Ç–∞–∂ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º?",
    answer: "–°—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–∏–ø–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º: –º–æ–Ω—Ç–∞–∂ —ç–ª–µ–∫—Ç—Ä–∏–∫–∏ - –æ—Ç 5 –¥–Ω–µ–π, –æ—Ç–æ–ø–ª–µ–Ω–∏—è - –æ—Ç 7 –¥–Ω–µ–π, –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è - –æ—Ç 4 –¥–Ω–µ–π. –¢–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –æ—Å–º–æ—Ç—Ä–∞ –æ–±—ä–µ–∫—Ç–∞."
  },
  {
    question: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ —Ä–∞–±–æ—Ç—ã?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é 3 –≥–æ–¥–∞ –Ω–∞ –≤—Å–µ –≤–∏–¥—ã –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç. –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –¥–æ–≥–æ–≤–æ—Ä–µ."
  },
  {
    question: "–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è?",
    answer: "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –º–æ–∂–µ–º –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥ –≤–∞—à –±—é–¥–∂–µ—Ç. –¢–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–æ–º."
  },
  {
    question: "–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞?",
    answer: "–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ. –û–ø–ª–∞—Ç–∞ —Ä–∞–∑–±–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —á–∞—Å—Ç–∏: –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 30%, –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –º–æ–Ω—Ç–∞–∂–∞ –∫–∞–∂–¥–æ–π —Å–∏—Å—Ç–µ–º—ã, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞."
  },
  {
    question: "–ù—É–∂–Ω—ã –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è?",
    answer: "–î–∞, –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–∏–¥–æ–≤ —Ä–∞–±–æ—Ç —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è. –ú—ã –ø–æ–º–æ–≥–∞–µ–º –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º–∏."
  },
  {
    question: "–û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –º–æ–Ω—Ç–∞–∂–∞?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–µ—Ä–≤–∏—Å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º. –¢–∞–∫–∂–µ –ø—Ä–æ–≤–æ–¥–∏–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø–æ –∂–µ–ª–∞–Ω–∏—é –∫–ª–∏–µ–Ω—Ç–∞."
  }
]

export default function EngineeringPage() {
  const [openCategories, setOpenCategories] = useState<string[]>([])
  const [openFaqs, setOpenFaqs] = useState<number[]>([])
  const [isOrderDialogOpen, setIsOrderDialogOpen] = useState(false)
  const [selectedServices, setSelectedServices] = useState<string[]>([])
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    address: "",
    comment: ""
  })

  const toggleCategory = (title: string) => {
    setOpenCategories(prev =>
      prev.includes(title)
        ? prev.filter(cat => cat !== title)
        : [...prev, title]
    )
  }

  const toggleService = (service: string) => {
    setSelectedServices(prev =>
      prev.includes(service)
        ? prev.filter(s => s !== service)
        : [...prev, service]
    )
  }

  const toggleFaq = (index: number) => {
    setOpenFaqs(prev =>
      prev.includes(index)
        ? prev.filter(i => i !== index)
        : [...prev, index]
    )
  }

  const handleFormChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const handleOpenDialog = () => {
    setIsOrderDialogOpen(true)
    setFormData(prev => ({
      ...prev,
      comment: selectedServices.join('\n')
    }))
  }

  const handleCloseDialog = () => {
    setIsOrderDialogOpen(false)
    setSelectedServices([])
    setFormData({
      name: "",
      phone: "",
      address: "",
      comment: ""
    })
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    console.log('Form submitted:', formData)
    handleCloseDialog()
  }

  return (
    <div className="min-h-screen bg-white dark:bg-gray-900">
      <div className="w-full bg-gradient-to-r from-blue-800 to-blue-600 text-white pb-32">
        <div className="container mx-auto px-4 pt-12">
          {/* Hero Section */}
          <section className="text-center">
            <div className="w-24 h-24 rounded-[20px] bg-gradient-to-r from-[#FF7A00] to-[#FF0000] flex items-center justify-center mb-6 mx-auto shadow-[0_4px_8px_rgba(0,0,0,0.5)]">
              <span className="text-4xl drop-shadow-[0_4px_4px_rgba(0,0,0,0.8)]">üîå</span>
            </div>
            <h1 className="text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
              –ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
            </h1>
            <p className="text-xl md:text-2xl text-white max-w-3xl mx-auto font-bold">
              –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –ø–æ–¥ –∫–ª—é—á: —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ, –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è.
              <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text"> –ì–∞—Ä–∞–Ω—Ç–∏—è 3 –≥–æ–¥–∞!</span>
            </p>
          </section>
        </div>
      </div>

      {/* Services List */}
      <section className="max-w-4xl mx-auto px-4 -mt-24">
        <div className="bg-[#FFE4D6] dark:bg-gray-900 rounded-lg shadow-lg p-6">
          {services.map((category) => (
            <div key={category.title} className="mb-4">
              <button
                onClick={() => toggleCategory(category.title)}
                className="w-full flex items-center justify-between text-left p-4 bg-white/60 dark:bg-gray-800 rounded-lg hover:bg-white/90 dark:hover:bg-gray-700 transition-colors"
              >
                <h2 className="text-2xl font-semibold text-gray-900 dark:text-white">
                  {category.title}
                </h2>
                <ChevronDown
                  className={`w-6 h-6 transition-transform ${
                    openCategories.includes(category.title) ? "rotate-180" : ""
                  }`}
                />
              </button>
              
              {openCategories.includes(category.title) && (
                <div className="mt-2 space-y-3 pl-6 bg-white/30 dark:bg-gray-800/30 p-4 rounded-lg">
                  {category.items.map((item, index) => (
                    <div key={index} className="flex items-start gap-3">
                      <Checkbox
                        id={`${category.title}-${index}`}
                        checked={selectedServices.includes(item)}
                        onCheckedChange={() => toggleService(item)}
                        className="mt-1"
                      />
                      <label
                        htmlFor={`${category.title}-${index}`}
                        className="text-lg text-gray-700 dark:text-gray-300 cursor-pointer hover:text-gray-900 dark:hover:text-white transition-colors"
                      >
                        {item}
                      </label>
                    </div>
                  ))}
                </div>
              )}
            </div>
          ))}

          {/* Order Button */}
          <div className="text-center mt-8">
            <Button
              onClick={handleOpenDialog}
              className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white px-8 py-4 rounded-lg font-medium hover:opacity-90 transition-all text-lg"
            >
              –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É
            </Button>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="max-w-4xl mx-auto mt-20 px-4">
        <h2 className="text-3xl font-bold text-center mb-12 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
          –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        </h2>
        <div className="space-y-4">
          {faqQuestions.map((faq, index) => (
            <div 
              key={index} 
              className="bg-white/60 dark:bg-gray-800 rounded-lg overflow-hidden shadow-md"
            >
              <button
                onClick={() => toggleFaq(index)}
                className="w-full flex items-center justify-between p-6 text-left hover:bg-white/80 dark:hover:bg-gray-700 transition-colors"
              >
                <h3 className="text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-3">
                  <span className="text-[#FF4D00]">‚ùì</span>
                  {faq.question}
                </h3>
                <ChevronDown
                  className={`w-6 h-6 text-[#FF4D00] transition-transform duration-300 ${
                    openFaqs.includes(index) ? "rotate-180" : ""
                  }`}
                />
              </button>
              
              <AnimatePresence>
                {openFaqs.includes(index) && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ 
                      duration: 0.3,
                      ease: "easeInOut"
                    }}
                    className="overflow-hidden"
                  >
                    <div className="px-6 pb-6">
                      <p className="text-gray-700 dark:text-gray-300 pt-2 border-t border-gray-200 dark:border-gray-700">
                        {faq.answer}
                      </p>
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}
        </div>
      </section>

      {/* Order Dialog */}
      <Dialog open={isOrderDialogOpen} onOpenChange={handleCloseDialog}>
        <DialogContent className="sm:max-w-[480px] p-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            transition={{ duration: 0.3 }}
          >
            <div className="flex items-center gap-2 mb-2">
              <div className="w-8 h-8 rounded bg-[#FF4D00] flex items-center justify-center">
                <span className="text-white font-bold">RB</span>
              </div>
              <span className="text-[#FF4D00] font-bold">–†–µ—à–∞–µ–º –ë—ã—Å—Ç—Ä–æ</span>
            </div>
            
            <h2 className="text-xl font-medium mb-2">–ó–∞–∫–∞–∑–∞—Ç—å –º–æ–Ω—Ç–∞–∂</h2>
            <p className="text-sm text-gray-600 mb-6">
              –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">5 –º–∏–Ω—É—Ç</span>
            </p>

            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <Label>–ò–º—è</Label>
                <Input 
                  placeholder="–í–∞—à–µ –∏–º—è"
                  value={formData.name}
                  onChange={(e) => handleFormChange('name', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>
              
              <div>
                <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                <Input 
                  placeholder="–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  value={formData.phone}
                  onChange={(e) => handleFormChange('phone', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>

              <div>
                <Label>–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞</Label>
                <Input 
                  placeholder="–ê–¥—Ä–µ—Å –¥–ª—è –º–æ–Ω—Ç–∞–∂–∞ —Å–∏—Å—Ç–µ–º"
                  value={formData.address}
                  onChange={(e) => handleFormChange('address', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>

              <div>
                <Label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</Label>
                <Textarea 
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å"
                  value={formData.comment}
                  onChange={(e) => handleFormChange('comment', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00] min-h-[100px]"
                />
              </div>

              <Button 
                type="submit"
                className="w-full bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white hover:opacity-90"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </form>
          </motion.div>
        </DialogContent>
      </Dialog>
    </div>
  )
} 