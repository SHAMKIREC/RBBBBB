"use client"

import { useState } from "react"
import { ChevronDown } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Dialog, DialogContent } from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Label } from "@/components/ui/label"
import { Checkbox } from "@/components/ui/checkbox"
import { motion, AnimatePresence } from "framer-motion"

interface ServiceCategory {
  title: string
  items: string[]
}

const services: ServiceCategory[] = [
                {
                  title: "–ö—Ä–æ–≤–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã",
    items: [
      "–ú–æ–Ω—Ç–∞–∂ –Ω–æ–≤–æ–π –∫—Ä–æ–≤–ª–∏",
      "–†–µ–º–æ–Ω—Ç –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–æ–≤–ª–∏",
      "–£–∫–ª–∞–¥–∫–∞ —á–µ—Ä–µ–ø–∏—Ü—ã (–º–µ—Ç–∞–ª–ª–æ—á–µ—Ä–µ–ø–∏—Ü–∞, –≥–∏–±–∫–∞—è —á–µ—Ä–µ–ø–∏—Ü–∞ –∏ –¥—Ä.)",
      "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å–∫–∞—Ç–Ω–æ–π –∏ –ø–ª–æ—Å–∫–æ–π –∫—Ä–æ–≤–ª–∏",
      "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–∞–Ω—Å–∞—Ä–¥–Ω–æ–π –∫—Ä–æ–≤–ª–∏",
      "–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –∫—Ä–æ–≤–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π",
      "–£—Ç–µ–ø–ª–µ–Ω–∏–µ –∫—Ä–æ–≤–ª–∏",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ–¥–æ—Å—Ç–æ—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º",
      "–ú–æ–Ω—Ç–∞–∂ —Å–Ω–µ–≥–æ–∑–∞–¥–µ—Ä–∂–∞—Ç–µ–ª–µ–π",
      "–û—á–∏—Å—Ç–∫–∞ –∫—Ä–æ–≤–ª–∏ –æ—Ç —Å–Ω–µ–≥–∞ –∏ –Ω–∞–ª–µ–¥–∏"
                  ]
                },
                {
                  title: "–§–∞—Å–∞–¥–Ω—ã–µ —Ä–∞–±–æ—Ç—ã",
    items: [
      "–ú–æ–Ω—Ç–∞–∂ –≤–µ–Ω—Ç–∏–ª–∏—Ä—É–µ–º—ã—Ö —Ñ–∞—Å–∞–¥–æ–≤",
      "–û–±—à–∏–≤–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤ —Å–∞–π–¥–∏–Ω–≥–æ–º",
      "–û–±–ª–∏—Ü–æ–≤–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤ –∫–∏—Ä–ø–∏—á–æ–º –∏ –∫–∞–º–Ω–µ–º",
      "–®—Ç—É–∫–∞—Ç—É—Ä–Ω—ã–µ —Ñ–∞—Å–∞–¥—ã",
      "–†–µ–º–æ–Ω—Ç –∏ —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏—è —Ñ–∞—Å–∞–¥–æ–≤",
      "–¢–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏—è —Ñ–∞—Å–∞–¥–æ–≤ (–º–æ–∫—Ä—ã–π —Ñ–∞—Å–∞–¥)",
      "–ü–æ–∫—Ä–∞—Å–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤",
      "–û—á–∏—Å—Ç–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∞—Å–∞–¥–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π",
      "–ó–∞—â–∏—Ç–∞ —Ñ–∞—Å–∞–¥–æ–≤ –æ—Ç –≥—Ä–∏–±–∫–∞ –∏ –≤–ª–∞–≥–∏"
    ]
  }
]

const faqQuestions = [
  {
    question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –º–æ–Ω—Ç–∞–∂ –∫—Ä–æ–≤–ª–∏ –∏–ª–∏ —Ñ–∞—Å–∞–¥–∞?",
    answer: "–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç –∑–∞–≤–∏—Å—è—Ç –æ—Ç –ø–ª–æ—â–∞–¥–∏ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞. –í —Å—Ä–µ–¥–Ω–µ–º –º–æ–Ω—Ç–∞–∂ –∫—Ä–æ–≤–ª–∏ –∑–∞–Ω–∏–º–∞–µ—Ç 2-3 –Ω–µ–¥–µ–ª–∏, —Ñ–∞—Å–∞–¥–Ω—ã–µ —Ä–∞–±–æ—Ç—ã - –æ—Ç 2 –Ω–µ–¥–µ–ª—å –¥–æ 1 –º–µ—Å—è—Ü–∞. –¢–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –æ—Å–º–æ—Ç—Ä–∞ –æ–±—ä–µ–∫—Ç–∞."
  },
  {
    question: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ —Ä–∞–±–æ—Ç—ã?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é 3 –≥–æ–¥–∞ –Ω–∞ –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç. –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –∫–∞–∫ –Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —Ç–∞–∫ –∏ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –º–æ–Ω—Ç–∞–∂–∞."
  },
  {
    question: "–° –∫–∞–∫–∏–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?",
    answer: "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å–æ –≤—Å–µ–º–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∫—Ä–æ–≤–µ–ª—å–Ω—ã–º–∏ –∏ —Ñ–∞—Å–∞–¥–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π. –ú–æ–∂–µ–º –∫–∞–∫ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —Ç–∞–∫ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø—Ä–∏ –∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –Ω–æ—Ä–º–∞–º."
  },
  {
    question: "–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞?",
    answer: "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ: –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 40% –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞, –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —ç—Ç–∞–ø–æ–≤ —Ä–∞–±–æ—Ç, –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–æ—Å–ª–µ –ø—Ä–∏–µ–º–∫–∏ —Ä–∞–±–æ—Ç."
  },
  {
    question: "–î–µ–ª–∞–µ—Ç–µ –ª–∏ –≤—ã –∑–∞–º–µ—Ä—ã –∏ —Ä–∞—Å—á–µ—Ç—ã?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤—ã–µ–∑–¥ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –¥–ª—è –∑–∞–º–µ—Ä–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–º–µ—Ç—ã. –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ä–∞–±–æ—Ç."
                },
                {
    question: "–£–±–∏—Ä–∞–µ—Ç–µ –ª–∏ –≤—ã –∑–∞ —Å–æ–±–æ–π –º—É—Å–æ—Ä?",
    answer: "–î–∞, —É–±–æ—Ä–∫–∞ –∏ –≤—ã–≤–æ–∑ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç. –ú—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –≤ —á–∏—Å—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–∞–±–æ—Ç."
  }
]

export default function RoofingFacadesPage() {
  const [openCategories, setOpenCategories] = useState<string[]>([])
  const [openFaqs, setOpenFaqs] = useState<number[]>([])
  const [isOrderDialogOpen, setIsOrderDialogOpen] = useState(false)
  const [selectedServices, setSelectedServices] = useState<string[]>([])
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    message: ''
  })

  const toggleCategory = (title: string) => {
    setOpenCategories(prev =>
      prev.includes(title)
        ? prev.filter(cat => cat !== title)
        : [...prev, title]
    )
  }

  const toggleService = (service: string) => {
    setSelectedServices(prev =>
      prev.includes(service)
        ? prev.filter(s => s !== service)
        : [...prev, service]
    )
  }

  const toggleFaq = (index: number) => {
    setOpenFaqs(prev =>
      prev.includes(index)
        ? prev.filter(i => i !== index)
        : [...prev, index]
    )
  }

  const handleFormChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const handleOpenDialog = () => {
    setIsOrderDialogOpen(true)
    setFormData(prev => ({
      ...prev,
      message: selectedServices.join('\n')
    }))
  }

  const handleCloseDialog = () => {
    setIsOrderDialogOpen(false)
    setSelectedServices([])
    setFormData({
      name: '',
      phone: '',
      email: '',
      message: ''
    })
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    console.log('Form submitted:', formData)
    handleCloseDialog()
  }

  return (
    <div className="min-h-screen bg-white dark:bg-gray-900">
      <div className="w-full bg-gradient-to-r from-blue-800 to-blue-600 text-white pb-32">
        <div className="container mx-auto px-4 pt-12">
          <section className="text-center">
            <div className="w-24 h-24 rounded-[20px] bg-gradient-to-r from-[#FF7A00] to-[#FF0000] flex items-center justify-center mb-6 mx-auto shadow-[0_4px_8px_rgba(0,0,0,0.5)]">
              <span className="text-4xl drop-shadow-[0_4px_4px_rgba(0,0,0,0.8)]">üè†</span>
            </div>
            <h1 className="text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
              –ö—Ä–æ–≤–ª—è –∏ —Ñ–∞—Å–∞–¥—ã
            </h1>
            <p className="text-xl md:text-2xl text-white max-w-3xl mx-auto font-bold">
              –ù–∞–¥—ë–∂–Ω—ã–π –º–æ–Ω—Ç–∞–∂ –∏ —Ä–µ–º–æ–Ω—Ç –∫—Ä–æ–≤–ª–∏, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ç–¥–µ–ª–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤ ‚Äî –∑–∞—â–∏—Ç–∞ –∏ —Å—Ç–∏–ª—å –≤–∞—à–µ–≥–æ –¥–æ–º–∞.
            </p>
            <p className="text-xl md:text-2xl bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text font-bold mt-2">
              –ì–∞—Ä–∞–Ω—Ç–∏—è 3 –≥–æ–¥–∞!
            </p>
          </section>
        </div>
      </div>

      {/* Services List */}
      <section className="max-w-4xl mx-auto px-4 -mt-24">
        <div className="bg-[#FFE4D6] dark:bg-gray-900 rounded-lg shadow-lg p-6">
          {services.map((category) => (
            <div key={category.title} className="mb-8">
              <button
                onClick={() => toggleCategory(category.title)}
                className="w-full flex items-center justify-between p-6 bg-white dark:bg-gray-800 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
              >
                <span className="text-xl font-medium text-gray-900 dark:text-white">
                  {category.title}
                </span>
                <ChevronDown
                  className={`w-6 h-6 text-gray-500 transition-transform duration-300 ${
                    openCategories.includes(category.title) ? "rotate-180" : ""
                  }`}
                />
              </button>
              <AnimatePresence mode="wait">
                {openCategories.includes(category.title) && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="overflow-hidden"
                  >
                    <div className="mt-4 space-y-4 pl-8">
                      {category.items.map((item, index) => (
                        <div key={index} className="flex items-start gap-4">
                          <Checkbox
                            id={`${category.title}-${index}`}
                            checked={selectedServices.includes(item)}
                            onCheckedChange={() => toggleService(item)}
                            className="mt-1"
                          />
                          <label
                            htmlFor={`${category.title}-${index}`}
                            className="text-lg text-gray-700 dark:text-gray-300 cursor-pointer"
                          >
                            {item}
                          </label>
                        </div>
                      ))}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}

          <div className="text-center mt-8">
            <Button
              onClick={handleOpenDialog}
              className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white px-8 py-3 rounded-lg text-lg font-medium hover:opacity-90 transition-opacity"
            >
              –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É
            </Button>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="py-16">
        <div className="max-w-4xl mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </h2>
          <div className="space-y-6">
            {faqQuestions.map((item, index) => (
              <div key={index} className="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
                <button
                  onClick={() => toggleFaq(index)}
                  className="w-full flex items-center gap-4 p-6 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
                >
                  <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text font-bold text-2xl">
                    ?
                  </span>
                  <span className="flex-1 text-lg font-medium text-gray-900 dark:text-white">
                    {item.question}
                  </span>
                  <ChevronDown
                    className={`w-6 h-6 text-gray-500 transition-transform duration-300 ${
                      openFaqs.includes(index) ? "rotate-180" : ""
                    }`}
                  />
                </button>
                <AnimatePresence mode="wait">
                  {openFaqs.includes(index) && (
                    <motion.div
                      initial={{ height: 0, opacity: 0 }}
                      animate={{ height: "auto", opacity: 1 }}
                      exit={{ height: 0, opacity: 0 }}
                      transition={{ duration: 0.3 }}
                      className="overflow-hidden"
                    >
                      <div className="px-6 pb-6 text-gray-600 dark:text-gray-300 border-t border-gray-100 dark:border-gray-700">
                        {item.answer}
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Order Dialog */}
      <Dialog open={isOrderDialogOpen} onOpenChange={setIsOrderDialogOpen}>
        <DialogContent className="sm:max-w-[480px] p-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            transition={{ duration: 0.3 }}
          >
            <div className="flex items-center gap-2 mb-2">
              <div className="w-8 h-8 rounded bg-gradient-to-r from-[#FF7A00] to-[#FF0000] flex items-center justify-center">
                <span className="text-white font-bold">RB</span>
              </div>
              <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text font-bold">
                –†–µ—à–∞–µ–º –ë—ã—Å—Ç—Ä–æ
              </span>
            </div>
            
            <h2 className="text-xl font-medium mb-2">–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É</h2>
            <p className="text-sm text-gray-600 mb-6">
              –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">5 –º–∏–Ω—É—Ç</span>
            </p>

            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <Label htmlFor="name">–í–∞—à–µ –∏–º—è</Label>
                <Input
                  id="name"
                  value={formData.name}
                  onChange={(e) => handleFormChange('name', e.target.value)}
                  placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  required
                />
              </div>
              <div>
                <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                <Input
                  id="phone"
                  value={formData.phone}
                  onChange={(e) => handleFormChange('phone', e.target.value)}
                  placeholder="+7 (999) 999-99-99"
                  required
                />
              </div>
              <div>
                <Label htmlFor="email">Email</Label>
                <Input
                  id="email"
                  value={formData.email}
                  onChange={(e) => handleFormChange('email', e.target.value)}
                  placeholder="example@example.com"
                  required
                />
              </div>
              <div>
                <Label htmlFor="message">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</Label>
                <Textarea
                  id="message"
                  value={formData.message}
                  onChange={(e) => handleFormChange('message', e.target.value)}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è"
                  className="min-h-[100px]"
                />
              </div>
              <Button
                type="submit"
                className="w-full bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </form>
          </motion.div>
        </DialogContent>
      </Dialog>
    </div>
  )
}
