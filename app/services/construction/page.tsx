"use client"

import { useState } from "react"
import { motion, AnimatePresence } from "framer-motion"
import { Button } from "@/components/ui/button"
import { Dialog, DialogContent } from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Checkbox } from "@/components/ui/checkbox"
import { ChevronDown } from "lucide-react"

interface ServiceCategory {
  title: string
  items: string[]
}

const services: ServiceCategory[] = [
  {
    title: "–ñ–∏–ª–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
    items: [
      "–ß–∞—Å—Ç–Ω—ã–µ –¥–æ–º–∞",
      "–ö–æ—Ç—Ç–µ–¥–∂–∏",
      "–¢–∞—É–Ω—Ö–∞—É—Å—ã",
    ]
  },
  {
    title: "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
    items: [
      "–û—Ñ–∏—Å–Ω—ã–µ –∑–¥–∞–Ω–∏—è",
      "–¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã",
      "–°–∫–ª–∞–¥—ã",
    ]
  },
  {
    title: "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    items: [
      "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è",
      "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è",
      "–î–∏–∑–∞–π–Ω-–ø—Ä–æ–µ–∫—Ç—ã",
    ]
  }
]

const faqItems = [
  {
    question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —á–∞—Å—Ç–Ω–æ–≥–æ –¥–æ–º–∞?",
    answer: "–í —Å—Ä–µ–¥–Ω–µ–º —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —á–∞—Å—Ç–Ω–æ–≥–æ –¥–æ–º–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 4 –¥–æ 8 –º–µ—Å—è—Ü–µ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø–ª–æ—â–∞–¥–∏ –∑–¥–∞–Ω–∏—è."
  },
  {
    question: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ —Ä–∞–±–æ—Ç—ã?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é 3 –≥–æ–¥–∞ –Ω–∞ –≤—Å–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã. –í —Ç–µ—á–µ–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å—Ä–æ–∫–∞ –º—ã —É—Å—Ç—Ä–∞–Ω—è–µ–º –ª—é–±—ã–µ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –∑–∞ —Å–≤–æ–π —Å—á–µ—Ç."
  },
  {
    question: "–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤?",
    answer: "–ú—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏ –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –Ω–æ —Ç–∞–∫–∂–µ –≥–æ—Ç–æ–≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑—á–∏–∫–æ–º –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ—Ä–º–∞–º."
  },
  {
    question: "–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞?",
    answer: "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ —Å–æ–≥–ª–∞—Å–Ω–æ –≥—Ä–∞—Ñ–∏–∫—É —Ä–∞–±–æ—Ç. –ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂ - –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞, –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ - –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞."
  },
  {
    question: "–ù—É–∂–Ω—ã –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è?",
    answer: "–î–∞, –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ —Ç—Ä–µ–±—É—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è. –ú—ã –ø–æ–º–æ–≥–∞–µ–º –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏."
  },
  {
    question: "–û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. –í —Ç–µ—á–µ–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Å—Ä–æ–∫–∞ –≤—Å–µ —Ä–∞–±–æ—Ç—ã –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ."
  }
]

export default function ConstructionPage() {
  const [openCategories, setOpenCategories] = useState<string[]>([])
  const [openFaq, setOpenFaq] = useState<number | null>(null)
  const [isOrderDialogOpen, setIsOrderDialogOpen] = useState(false)
  const [selectedServices, setSelectedServices] = useState<string[]>([])
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    address: "",
    comment: ""
  })

  const toggleCategory = (title: string) => {
    setOpenCategories(prev =>
      prev.includes(title)
        ? prev.filter(cat => cat !== title)
        : [...prev, title]
    )
  }

  const toggleFaq = (index: number) => {
    setOpenFaq(openFaq === index ? null : index)
  }

  const toggleService = (service: string) => {
    setSelectedServices(prev =>
      prev.includes(service)
        ? prev.filter(s => s !== service)
        : [...prev, service]
    )
  }

  const handleFormChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const handleOpenDialog = () => {
    setIsOrderDialogOpen(true)
    setFormData(prev => ({
      ...prev,
      comment: selectedServices.join('\n')
    }))
  }

  const handleCloseDialog = () => {
    setIsOrderDialogOpen(false)
    setSelectedServices([])
    setFormData({
      name: "",
      phone: "",
      address: "",
      comment: ""
    })
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    console.log('Form submitted:', formData)
    handleCloseDialog()
  }

  return (
    <div className="min-h-screen bg-white dark:bg-gray-900">
      <div className="w-full bg-gradient-to-r from-blue-800 to-blue-600 text-white pb-32">
        <div className="container mx-auto px-4 pt-12">
          {/* Hero Section */}
          <section className="text-center">
            <div className="w-24 h-24 rounded-[20px] bg-gradient-to-r from-[#FF7A00] to-[#FF0000] flex items-center justify-center mb-6 mx-auto shadow-[0_4px_8px_rgba(0,0,0,0.5)]">
              <span className="text-4xl drop-shadow-[0_4px_4px_rgba(0,0,0,0.8)]">üèóÔ∏è</span>
            </div>
            <h1 className="text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
              –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ
            </h1>
            <p className="text-xl md:text-2xl text-white max-w-3xl mx-auto font-bold mb-2">
              –í–æ–∑–≤–æ–¥–∏–º –Ω–∞–¥—ë–∂–Ω—ã–µ –∂–∏–ª—ã–µ –¥–æ–º–∞ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –∑–¥–∞–Ω–∏—è ‚Äî –ø–æ–¥ –∫–ª—é—á, –≤ —Å—Ä–æ–∫.
            </p>
            <p className="text-xl md:text-2xl bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text font-bold">
              –ì–∞—Ä–∞–Ω—Ç–∏—è 3 –≥–æ–¥–∞!
            </p>
          </section>
        </div>
      </div>

      {/* Services Section */}
      <section className="max-w-4xl mx-auto -mt-24 px-4 relative z-10">
        <div className="bg-[#FFE4D6] dark:bg-gray-900 rounded-lg shadow-lg p-6">
          {services.map((category) => (
            <div key={category.title} className="mb-4">
              <button
                onClick={() => toggleCategory(category.title)}
                className="w-full flex items-center justify-between text-left p-4 bg-white/60 dark:bg-gray-800 rounded-lg hover:bg-white/90 dark:hover:bg-gray-700 transition-colors"
              >
                <h2 className="text-2xl font-semibold text-gray-900 dark:text-white">
                  {category.title}
                </h2>
                <ChevronDown
                  className={`w-6 h-6 transition-transform ${
                    openCategories.includes(category.title) ? "rotate-180" : ""
                  }`}
                />
              </button>
              
              <AnimatePresence>
                {openCategories.includes(category.title) && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="overflow-hidden"
                  >
                    <div className="mt-2 space-y-3 pl-6 bg-white/30 dark:bg-gray-800/30 p-4 rounded-lg">
                      {category.items.map((item, index) => (
                        <div key={index} className="flex items-start gap-3">
                          <Checkbox
                            id={`${category.title}-${index}`}
                            checked={selectedServices.includes(item)}
                            onCheckedChange={() => toggleService(item)}
                            className="mt-1"
                          />
                          <label
                            htmlFor={`${category.title}-${index}`}
                            className="text-lg text-gray-700 dark:text-gray-300 cursor-pointer hover:text-gray-900 dark:hover:text-white transition-colors"
                          >
                            {item}
                          </label>
                        </div>
                      ))}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}

          <div className="text-center mt-8">
            <Button
              onClick={handleOpenDialog}
              className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white px-8 py-4 rounded-lg font-medium hover:opacity-90 transition-all text-lg"
            >
              –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É
            </Button>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="max-w-4xl mx-auto mt-12 px-4 pb-12">
        <h2 className="text-3xl font-bold text-center mb-8 text-[#FF4D00]">
          –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        </h2>
        <div className="space-y-4">
          {faqItems.map((item, index) => (
            <div key={index} className="bg-white rounded-lg shadow-sm">
              <button
                onClick={() => toggleFaq(index)}
                className="w-full flex items-center gap-4 p-4 text-left"
              >
                <span className="text-[#FF4D00] font-bold text-xl">?</span>
                <span className="text-lg font-medium text-gray-900">
                  {item.question}
                </span>
                <ChevronDown
                  className={`w-5 h-5 text-gray-500 transition-transform duration-300 ml-auto ${
                    openFaq === index ? "rotate-180" : ""
                  }`}
                />
              </button>
              <AnimatePresence>
                {openFaq === index && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="overflow-hidden"
                  >
                    <div className="px-4 pb-4 pl-12 text-gray-600">
                      {item.answer}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}
        </div>
      </section>

      {/* Order Dialog */}
      <Dialog open={isOrderDialogOpen} onOpenChange={setIsOrderDialogOpen}>
        <DialogContent className="sm:max-w-[480px] p-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            transition={{ duration: 0.3 }}
          >
            <div className="flex items-center gap-2 mb-2">
              <div className="w-8 h-8 rounded bg-[#FF4D00] flex items-center justify-center">
                <span className="text-white font-bold">RB</span>
              </div>
              <span className="text-[#FF4D00] font-bold">–†–µ—à–∞–µ–º –ë—ã—Å—Ç—Ä–æ</span>
            </div>
            
            <h2 className="text-xl font-medium mb-2">–ó–∞–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ</h2>
            <p className="text-sm text-gray-600 mb-6">
              –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">5 –º–∏–Ω—É—Ç</span>
            </p>

            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <Label>–ò–º—è</Label>
                <Input 
                  placeholder="–í–∞—à–µ –∏–º—è"
                  value={formData.name}
                  onChange={(e) => handleFormChange('name', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>
              
              <div>
                <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                <Input 
                  placeholder="–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  value={formData.phone}
                  onChange={(e) => handleFormChange('phone', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>

              <div>
                <Label>–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞</Label>
                <Input 
                  placeholder="–ê–¥—Ä–µ—Å –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞"
                  value={formData.address}
                  onChange={(e) => handleFormChange('address', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>

              <div>
                <Label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</Label>
                <Textarea 
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å"
                  value={formData.comment}
                  onChange={(e) => handleFormChange('comment', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00] min-h-[100px]"
                />
              </div>

              <Button 
                type="submit"
                className="w-full bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white hover:opacity-90"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </form>
          </motion.div>
        </DialogContent>
      </Dialog>
    </div>
  )
}
