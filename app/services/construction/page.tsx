"use client"

import { useState } from 'react'
import { Button } from "@/components/ui/button"
import { Dialog, DialogContent } from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Checkbox } from "@/components/ui/checkbox"
import { ChevronDown } from "lucide-react"
import { motion, AnimatePresence } from "framer-motion"
import { ModalForm } from '@/components/ModalForm'

const services: ServiceCategory[] = [
                {
                  title: "–ñ–∏–ª–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
    items: [
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —á–∞—Å—Ç–Ω—ã—Ö –¥–æ–º–æ–≤",
      "–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –∫–æ—Ç—Ç–µ–¥–∂–µ–π",
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Ç–∞—É–Ω—Ö–∞—É—Å–æ–≤",
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å",
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≥–∞—Ä–∞–∂–µ–π",
      "–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏"
    ]
                },
                {
                  title: "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
    items: [
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –æ—Ñ–∏—Å–Ω—ã—Ö –∑–¥–∞–Ω–∏–π",
      "–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤",
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Å–∫–ª–∞–¥–æ–≤",
      "–ú–æ–Ω—Ç–∞–∂ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤",
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ü–µ—Ö–æ–≤",
      "–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –∞–Ω–≥–∞—Ä–æ–≤",
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –ê–ó–°",
      "–ú–æ–Ω—Ç–∞–∂ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π",
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π",
      "–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤"
    ]
  },
  {
    title: "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã",
    items: [
      "–ú–æ–Ω—Ç–∞–∂ –º–µ—Ç–∞–ª–ª–æ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π",
      "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–Ω–æ–ª–∏—Ç–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π",
      "–ú–æ–Ω—Ç–∞–∂ —Å–±–æ—Ä–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π",
      "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≥–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏–∏",
      "–ú–æ–Ω—Ç–∞–∂ —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏–∏",
      "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ñ–∞—Å–∞–¥–Ω—ã—Ö —Å–∏—Å—Ç–µ–º",
      "–ú–æ–Ω—Ç–∞–∂ –ª–∏—Ñ—Ç–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
      "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–æ—Ä–æ–∂–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π",
      "–ú–æ–Ω—Ç–∞–∂ –æ–≥—Ä–∞–∂–¥–µ–Ω–∏–π",
      "–í—ã–≤–æ–∑ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞"
    ]
  }
]

interface ServiceCategory {
  title: string
  items: string[]
}

const faqQuestions = [
  {
    question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞?",
    answer: "–°—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –ø–ª–æ—â–∞–¥–∏ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞. –í —Å—Ä–µ–¥–Ω–µ–º —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —á–∞—Å—Ç–Ω–æ–≥–æ –¥–æ–º–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 6 –¥–æ 12 –º–µ—Å—è—Ü–µ–≤, –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ - –æ—Ç 1 –¥–æ 2 –ª–µ—Ç. –¢–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –ø–ª–∞–Ω–∞."
  },
  {
    question: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é 3 –≥–æ–¥–∞ –Ω–∞ –≤—Å–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã. –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –∫–∞–∫ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, —Ç–∞–∫ –∏ –Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã."
  },
  {
    question: "–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤?",
    answer: "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –≤–µ–¥—É—â–∏–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è–º–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ú–æ–∂–µ–º –∫–∞–∫ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, —Ç–∞–∫ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –≤—ã–±–æ—Ä—É –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø—Ä–∏ –∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –Ω–æ—Ä–º–∞–º."
  },
  {
    question: "–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞?",
    answer: "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ: –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 30% –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞, –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —ç—Ç–∞–ø–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–æ—Å–ª–µ —Å–¥–∞—á–∏ –æ–±—ä–µ–∫—Ç–∞."
  },
  {
    question: "–ù—É–∂–Ω—ã –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è?",
    answer: "–î–∞, –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ —Ç—Ä–µ–±—É—é—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è. –ú—ã –ø–æ–º–æ–≥–∞–µ–º –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º–∏."
                },
                {
    question: "–û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –Ω–∞–¥–∑–æ—Ä?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —É—Å–ª—É–≥–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–¥–∑–æ—Ä–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –≠—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç, –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–æ–µ–∫—Ç—É –∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º."
  }
]

export default function ConstructionPage() {
  const [openCategories, setOpenCategories] = useState<string[]>([])
  const [openFaqs, setOpenFaqs] = useState<number[]>([])
  const [isOrderDialogOpen, setIsOrderDialogOpen] = useState(false)
  const [selectedServices, setSelectedServices] = useState<string[]>([])
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    message: ''
  })

  const toggleCategory = (title: string) => {
    setOpenCategories(prev =>
      prev.includes(title)
        ? prev.filter(cat => cat !== title)
        : [...prev, title]
    )
  }

  const toggleService = (service: string) => {
    setSelectedServices(prev =>
      prev.includes(service)
        ? prev.filter(s => s !== service)
        : [...prev, service]
    )
  }

  const toggleFaq = (index: number) => {
    setOpenFaqs(prev =>
      prev.includes(index)
        ? prev.filter(i => i !== index)
        : [...prev, index]
    )
  }

  const handleFormChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const handleOpenDialog = () => {
    setIsOrderDialogOpen(true)
  }

  const handleCloseDialog = () => {
    setIsOrderDialogOpen(false)
    setSelectedServices([])
    setFormData({
      name: '',
      phone: '',
      email: '',
      message: ''
    })
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    console.log('Form submitted:', formData)
    handleCloseDialog()
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è —Ñ–æ—Ä–º—ã
  const commentText = selectedServices.length
    ? `–£—Å–ª—É–≥–∞: –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ\n–í—ã–±—Ä–∞–Ω–æ:\n${selectedServices.map(s => `- ${s}`).join('\n')}`
    : '–£—Å–ª—É–≥–∞: –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ'

  return (
    <div className="min-h-screen bg-white dark:bg-gray-900">
      <div className="w-full bg-gradient-to-r from-blue-800 to-blue-600 text-white pb-32">
        <div className="container mx-auto px-4 pt-12">
          {/* Hero Section */}
          <section className="text-center">
            <div className="w-24 h-24 rounded-[20px] bg-gradient-to-r from-[#FF7A00] to-[#FF0000] flex items-center justify-center mb-6 mx-auto shadow-[0_4px_8px_rgba(0,0,0,0.5)]">
              <span className="text-4xl drop-shadow-[0_4px_4px_rgba(0,0,0,0.8)]">üèóÔ∏è</span>
            </div>
            <h1 className="text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
              –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ
            </h1>
            <p className="text-xl md:text-2xl text-white max-w-3xl mx-auto font-bold">
              –í–æ–∑–≤–æ–¥–∏–º –Ω–∞–¥—ë–∂–Ω—ã–µ –∂–∏–ª—ã–µ –¥–æ–º–∞ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –∑–¥–∞–Ω–∏—è ‚Äî –ø–æ–¥ –∫–ª—é—á, –≤ —Å—Ä–æ–∫ –∏ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –∫–∞—á–µ—Å—Ç–≤–∞.
            </p>
            <p className="text-xl md:text-2xl bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text font-bold mt-2">
              –ì–∞—Ä–∞–Ω—Ç–∏—è 3 –≥–æ–¥–∞!
            </p>
          </section>
        </div>
      </div>

      {/* Services List */}
      <section className="max-w-4xl mx-auto px-4 -mt-24">
        <div className="bg-[#FFE4D6] dark:bg-gray-900 rounded-lg shadow-lg p-6">
          {services.map((category) => (
            <div key={category.title} className="mb-8">
              <button
                onClick={() => toggleCategory(category.title)}
                className="w-full flex items-center justify-between p-6 bg-white dark:bg-gray-800 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
              >
                <span className="text-xl font-medium text-gray-900 dark:text-white">
                  {category.title}
                </span>
                <ChevronDown
                  className={`w-6 h-6 text-gray-500 transition-transform duration-300 ${
                    openCategories.includes(category.title) ? "rotate-180" : ""
                  }`}
                />
              </button>
              <AnimatePresence mode="wait">
                {openCategories.includes(category.title) && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="overflow-hidden"
                  >
                    <div className="mt-4 space-y-4 pl-8">
                      {category.items.map((item, index) => (
                        <div key={index} className="flex items-start gap-4">
                          <Checkbox
                            id={`${category.title}-${index}`}
                            checked={selectedServices.includes(item)}
                            onCheckedChange={() => toggleService(item)}
                            className="mt-1"
                          />
                          <label
                            htmlFor={`${category.title}-${index}`}
                            className="text-lg text-gray-700 dark:text-gray-300 cursor-pointer"
                          >
                            {item}
                          </label>
                        </div>
                      ))}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}

          <div className="text-center mt-8">
            <Button
              onClick={handleOpenDialog}
              className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white px-8 py-3 rounded-lg text-lg font-medium hover:opacity-90 transition-opacity"
            >
              –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É
            </Button>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="py-16">
        <div className="max-w-4xl mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </h2>
          <div className="space-y-6">
            {faqQuestions.map((item, index) => (
              <div key={index} className="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
                <button
                  onClick={() => toggleFaq(index)}
                  className="w-full flex items-center gap-4 p-6 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
                >
                  <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text font-bold text-2xl">
                    ?
                  </span>
                  <span className="flex-1 text-lg font-medium text-gray-900 dark:text-white">
                    {item.question}
                  </span>
                  <ChevronDown
                    className={`w-6 h-6 text-gray-500 transition-transform duration-300 ${
                      openFaqs.includes(index) ? "rotate-180" : ""
                    }`}
                  />
                </button>
                <AnimatePresence mode="wait">
                  {openFaqs.includes(index) && (
                    <motion.div
                      initial={{ height: 0, opacity: 0 }}
                      animate={{ height: "auto", opacity: 1 }}
                      exit={{ height: 0, opacity: 0 }}
                      transition={{ duration: 0.3 }}
                      className="overflow-hidden"
                    >
                      <div className="px-6 pb-6 text-gray-600 dark:text-gray-300 border-t border-gray-100 dark:border-gray-700">
                        {item.answer}
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Order Dialog */}
      <ModalForm
        isOpen={isOrderDialogOpen}
        onClose={handleCloseDialog}
        initialComment={commentText}
        title="–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ"
      />
    </div>
  )
}
