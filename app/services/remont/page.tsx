"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Dialog, DialogContent } from "@/components/ui/dialog"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Check, ChevronDown } from "lucide-react"
import { Checkbox } from "@/components/ui/checkbox"
import { motion, AnimatePresence } from "framer-motion"

interface ServiceCategory {
  title: string
  items: string[]
}

const services: ServiceCategory[] = [
  {
    title: "–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç",
    items: [
      "–ü–æ–∫—Ä–∞—Å–∫–∞ —Å—Ç–µ–Ω –∏ –ø–æ—Ç–æ–ª–∫–æ–≤ (–∞–∫—Ä–∏–ª–æ–≤—ã–µ, –ª–∞—Ç–µ–∫—Å–Ω—ã–µ —Å–æ—Å—Ç–∞–≤—ã)",
      "–û–∫–ª–µ–π–∫–∞ –æ–±–æ—è–º–∏ (–±—É–º–∞–∂–Ω—ã–µ, —Ñ–ª–∏–∑–µ–ª–∏–Ω–æ–≤—ã–µ, –≤–∏–Ω–∏–ª–æ–≤—ã–µ)",
      "–£–∫–ª–∞–¥–∫–∞ –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π (–ª–∞–º–∏–Ω–∞—Ç, –ø–∞—Ä–∫–µ—Ç, –ª–∏–Ω–æ–ª–µ—É–º)",
      "–ó–∞–º–µ–Ω–∞ —Ä–æ–∑–µ—Ç–æ–∫ –∏ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π",
      "–ú–æ–Ω—Ç–∞–∂ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π",
      "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∞–Ω—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–±–æ—Ä–æ–≤",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∏–Ω—Ç—É—Å–æ–≤ –∏ –≥–∞–ª—Ç–µ–ª–µ–π",
      "–ü–æ–∫—Ä—ã—Ç–∏–µ –ª–∞–∫–æ–º –¥–µ—Ä–µ–≤—è–Ω–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π",
      "–ú–æ–Ω—Ç–∞–∂ –∫–∞—Ä–Ω–∏–∑–æ–≤ –¥–ª—è —à—Ç–æ—Ä"
    ]
  },
  {
    title: "–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç",
    items: [
      "–ü–æ–ª–Ω—ã–π –¥–µ–º–æ–Ω—Ç–∞–∂ –ø–µ—Ä–µ–≥–æ—Ä–æ–¥–æ–∫ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π",
      "–ü–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ –ø–æ–º–µ—â–µ–Ω–∏–π (—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –≤ –ë–¢–ò)",
      "–ó–∞–º–µ–Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏ –∏ —â–∏—Ç–∫–æ–≤",
      "–ú–æ–Ω—Ç–∞–∂ —Å–∏—Å—Ç–µ–º –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏ –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –æ–∫–æ–Ω –∏ –¥–≤–µ—Ä–Ω—ã—Ö –±–ª–æ–∫–æ–≤",
      "–ì–∏–¥—Ä–æ–∏–∑–æ–ª—è—Ü–∏—è –≤–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –∏ —Å–∞–Ω—É–∑–ª–æ–≤",
      "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Å—Ç–µ–Ω —à—Ç—É–∫–∞—Ç—É—Ä–∫–æ–π –∏ —à–ø–∞–∫–ª–µ–≤–∫–æ–π",
      "–ó–∞–ª–∏–≤–∫–∞ —Å—Ç—è–∂–∫–∏ –ø–æ–ª–∞ —Å –Ω–∏–≤–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
      "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–∏ —Å—Ç–µ–Ω –∏ –ø–æ—Ç–æ–ª–∫–æ–≤",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Ö—Ä–∞–Ω–µ–Ω–∏—è"
    ]
  },
  {
    title: "–°–ø–µ—Ü—Ä–∞–±–æ—Ç—ã",
    items: [
      "–£–∫–ª–∞–¥–∫–∞ –ø–ª–∏—Ç–∫–∏ (–∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è, –∫–µ—Ä–∞–º–æ–≥—Ä–∞–Ω–∏—Ç, –∫–ª–∏–Ω–∫–µ—Ä)",
      "–ó–∞—Ç–∏—Ä–∫–∞ –∏ –≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—è —à–≤–æ–≤ –ø–ª–∏—Ç–∫–∏",
      "–ú–æ–Ω—Ç–∞–∂ –Ω–∞—Ç—è–∂–Ω—ã—Ö –∏ –≥–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω–Ω—ã—Ö –ø–æ—Ç–æ–ª–∫–æ–≤",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–ø–ª—ã—Ö –ø–æ–ª–æ–≤ (—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ, –≤–æ–¥—è–Ω—ã–µ)",
      "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —à—Ç—É–∫–∞—Ç—É—Ä–∫–∞ (–≤–µ–Ω–µ—Ü–∏–∞–Ω—Å–∫–∞—è, —Ñ–∞–∫—Ç—É—Ä–Ω–∞—è)",
      "–ú–æ–Ω—Ç–∞–∂ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —à–∫–∞—Ñ–æ–≤ –∏ –Ω–∏—à"
    ]
  },
  {
    title: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏",
    items: [
      "–í—ã–≤–æ–∑ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞",
      "–•–∏–º—á–∏—Å—Ç–∫–∞ –º—è–≥–∫–æ–π –º–µ–±–µ–ª–∏ –ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞",
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ª–µ—Å—Ç–Ω–∏—Ü"
    ]
  }
]

const faqQuestions = [
  {
    question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç —Ä–µ–º–æ–Ω—Ç?",
    answer: "–°—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–∏–ø–∞ —Ä–µ–º–æ–Ω—Ç–∞: –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã - –æ—Ç 2 –Ω–µ–¥–µ–ª—å, –∫–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π - –æ—Ç 1.5 –º–µ—Å—è—Ü–µ–≤. –¢–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –æ—Å–º–æ—Ç—Ä–∞ –æ–±—ä–µ–∫—Ç–∞."
  },
  {
    question: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ —Ä–∞–±–æ—Ç—ã?",
    answer: "–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é 3 –≥–æ–¥–∞ –Ω–∞ –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç. –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –¥–æ–≥–æ–≤–æ—Ä–µ."
  },
  {
    question: "–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã —Å–æ —Å–≤–æ–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º?",
    answer: "–î–∞, –º—ã –º–æ–∂–µ–º –≤–∑—è—Ç—å –Ω–∞ —Å–µ–±—è –∑–∞–∫—É–ø–∫—É –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã - –º—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∏—Ö –∫–∞—á–µ—Å—Ç–≤–æ –∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å."
  },
  {
    question: "–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞?",
    answer: "–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ. –û–ø–ª–∞—Ç–∞ —Ä–∞–∑–±–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —á–∞—Å—Ç–∏: –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 30%, –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é —ç—Ç–∞–ø–æ–≤, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–æ—Å–ª–µ –ø—Ä–∏–µ–º–∫–∏ —Ä–∞–±–æ—Ç."
  },
  {
    question: "–ó–∞–∫–ª—é—á–∞–µ—Ç–µ –ª–∏ –≤—ã –¥–æ–≥–æ–≤–æ—Ä?",
    answer: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –ú—ã –∑–∞–∫–ª—é—á–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä, –≥–¥–µ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç, —Å—Ä–æ–∫–∏, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞."
  },
  {
    question: "–£–±–∏—Ä–∞–µ—Ç–µ –ª–∏ –≤—ã –∑–∞ —Å–æ–±–æ–π –º—É—Å–æ—Ä?",
    answer: "–î–∞, —É–±–æ—Ä–∫–∞ –∏ –≤—ã–≤–æ–∑ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç. –ú—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã–º –∫ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏."
  }
]

export default function RemontPage() {
  const [openCategories, setOpenCategories] = useState<string[]>([])
  const [openFaqs, setOpenFaqs] = useState<number[]>([])
  const [isOrderDialogOpen, setIsOrderDialogOpen] = useState(false)
  const [selectedServices, setSelectedServices] = useState<string[]>([])
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    address: "",
    comment: ""
  })

  const toggleCategory = (title: string) => {
    setOpenCategories(prev =>
      prev.includes(title)
        ? prev.filter(cat => cat !== title)
        : [...prev, title]
    )
  }

  const toggleService = (service: string) => {
    setSelectedServices(prev =>
      prev.includes(service)
        ? prev.filter(s => s !== service)
        : [...prev, service]
    )
  }

  const toggleFaq = (index: number) => {
    setOpenFaqs(prev =>
      prev.includes(index)
        ? prev.filter(i => i !== index)
        : [...prev, index]
    )
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
  const handleFormChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleOpenDialog = () => {
    setIsOrderDialogOpen(true)
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏
    setFormData(prev => ({
      ...prev,
      comment: selectedServices.join('\n')
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleCloseDialog = () => {
    setIsOrderDialogOpen(false)
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏
    setSelectedServices([])
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    setFormData({
      name: "",
      phone: "",
      address: "",
      comment: ""
    })
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    console.log('Form submitted:', formData)
    handleCloseDialog()
  }

  return (
    <div className="min-h-screen bg-white dark:bg-gray-900">
      <div className="w-full bg-gradient-to-r from-blue-800 to-blue-600 text-white">
        <main className="container mx-auto px-4 py-12">
          {/* Hero Section */}
          <section className="text-center mb-16">
            <div className="w-24 h-24 rounded-[20px] bg-gradient-to-r from-[#FF7A00] to-[#FF0000] flex items-center justify-center mb-6 mx-auto shadow-[0_4px_8px_rgba(0,0,0,0.5)]">
              <span className="text-4xl drop-shadow-[0_4px_4px_rgba(0,0,0,0.8)]">üõ†Ô∏è</span>
            </div>
            <h1 className="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
              –†–µ–º–æ–Ω—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
            </h1>
            <p className="text-xl md:text-2xl text-white max-w-3xl mx-auto mb-8 font-bold">
              –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä, –æ—Ñ–∏—Å–æ–≤ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π: –æ—Ç –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ –∫–∞–ø–∏—Ç–∞–ª—å–Ω–æ–≥–æ. 
              <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text"> –ì–∞—Ä–∞–Ω—Ç–∏—è 3 –≥–æ–¥–∞!</span>
            </p>
          </section>
        </main>
      </div>

      {/* Services List */}
      <main className="container mx-auto px-4 -mt-16">
        <section className="max-w-4xl mx-auto bg-[#FFE4D6] dark:bg-gray-900 rounded-lg shadow-lg p-8">
          {services.map((category) => (
            <div key={category.title} className="mb-8">
              <button
                onClick={() => toggleCategory(category.title)}
                className="w-full flex items-center justify-between text-left p-4 bg-white/60 dark:bg-gray-800 rounded-lg hover:bg-white/90 dark:hover:bg-gray-700 transition-colors"
              >
                <h2 className="text-2xl font-semibold text-gray-900 dark:text-white">
                  {category.title}
                </h2>
                <ChevronDown
                  className={`w-6 h-6 transition-transform ${
                    openCategories.includes(category.title) ? "rotate-180" : ""
                  }`}
                />
              </button>
              
              {openCategories.includes(category.title) && (
                <div className="mt-4 space-y-4 pl-6 bg-white/30 dark:bg-gray-800/30 p-4 rounded-lg">
                  {category.items.map((item, index) => (
                    <div key={index} className="flex items-start gap-3">
                      <Checkbox
                        id={`${category.title}-${index}`}
                        checked={selectedServices.includes(item)}
                        onCheckedChange={() => toggleService(item)}
                        className="mt-1"
                      />
                      <label
                        htmlFor={`${category.title}-${index}`}
                        className="text-lg text-gray-700 dark:text-gray-300 cursor-pointer hover:text-gray-900 dark:hover:text-white transition-colors"
                      >
                        {item}
                      </label>
                    </div>
                  ))}
                </div>
              )}
            </div>
          ))}
        </section>

        {/* Order Button */}
        <div className="text-center mt-16">
          <Button
            onClick={handleOpenDialog}
            className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white px-8 py-4 rounded-lg font-medium hover:opacity-90 transition-all text-lg"
          >
            –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É
          </Button>
        </div>

        {/* FAQ Section */}
        <section className="max-w-4xl mx-auto mt-20 px-4">
          <h2 className="text-3xl font-bold text-center mb-12 bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </h2>
          <div className="space-y-4">
            {faqQuestions.map((faq, index) => (
              <div 
                key={index} 
                className="bg-white/60 dark:bg-gray-800 rounded-lg overflow-hidden shadow-md"
              >
                <button
                  onClick={() => toggleFaq(index)}
                  className="w-full flex items-center justify-between p-6 text-left hover:bg-white/80 dark:hover:bg-gray-700 transition-colors"
                >
                  <h3 className="text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-3">
                    <span className="text-[#FF4D00]">‚ùì</span>
                    {faq.question}
                  </h3>
                  <ChevronDown
                    className={`w-6 h-6 text-[#FF4D00] transition-transform ${
                      openFaqs.includes(index) ? "rotate-180" : ""
                    }`}
                  />
                </button>
                
                {openFaqs.includes(index) && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: "auto", opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="px-6 pb-6"
                  >
                    <p className="text-gray-700 dark:text-gray-300 pt-2 border-t border-gray-200 dark:border-gray-700">
                      {faq.answer}
                    </p>
                  </motion.div>
                )}
              </div>
            ))}
          </div>
        </section>
      </main>

      {/* Order Dialog */}
      <Dialog open={isOrderDialogOpen} onOpenChange={handleCloseDialog}>
        <DialogContent className="sm:max-w-[480px] p-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            transition={{ duration: 0.3 }}
          >
            <div className="flex items-center gap-2 mb-2">
              <div className="w-8 h-8 rounded bg-[#FF4D00] flex items-center justify-center">
                <span className="text-white font-bold">RB</span>
              </div>
              <span className="text-[#FF4D00] font-bold">–†–µ—à–∞–µ–º –ë—ã—Å—Ç—Ä–æ</span>
            </div>
            
            <h2 className="text-xl font-medium mb-2">–ó–∞–∫–∞–∑–∞—Ç—å —Ä–µ–º–æ–Ω—Ç</h2>
            <p className="text-sm text-gray-600 mb-6">
              –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Ä–µ–º–æ–Ω—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ <span className="bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-transparent bg-clip-text">5 –º–∏–Ω—É—Ç</span>
            </p>

            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <Label>–ò–º—è</Label>
                <Input 
                  placeholder="–í–∞—à–µ –∏–º—è"
                  value={formData.name}
                  onChange={(e) => handleFormChange('name', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>
              
              <div>
                <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                <Input 
                  placeholder="–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  value={formData.phone}
                  onChange={(e) => handleFormChange('phone', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>

              <div>
                <Label>–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞</Label>
                <Input 
                  placeholder="–ê–¥—Ä–µ—Å –ø–æ–º–µ—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞"
                  value={formData.address}
                  onChange={(e) => handleFormChange('address', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00]"
                />
              </div>

              <div>
                <Label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</Label>
                <Textarea 
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å"
                  value={formData.comment}
                  onChange={(e) => handleFormChange('comment', e.target.value)}
                  className="border-[#FF4D00] focus:border-[#FF4D00] min-h-[100px]"
                />
              </div>

              <Button 
                type="submit"
                className="w-full bg-gradient-to-r from-[#FF7A00] to-[#FF0000] text-white hover:opacity-90"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </form>
          </motion.div>
        </DialogContent>
      </Dialog>
    </div>
  )
} 